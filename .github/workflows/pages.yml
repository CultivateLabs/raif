name: Deploy Jekyll docs site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main", "feature/jekyll-docs"]
    paths: ["docs/**"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # set up ruby & gems in root for YARD
      - name: Setup Ruby (root)
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ruby-3.4.2
          bundler-cache: true

      # Build YARD docs in root, output to docs/yard/
      - name: Build YARD Documentation
        run: |
          bundle exec rake yard
          mkdir -p docs/yard
          cp -r doc/* docs/yard/

      # Install gems in docs/ (for Jekyll)
      - name: Setup Ruby (docs)
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ruby-3.4.2
          bundler-cache: true
          working-directory: ./docs

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5

      - name: Build with Jekyll
        run: bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: production
        working-directory: ./docs

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./docs/_site/